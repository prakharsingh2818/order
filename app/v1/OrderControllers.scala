/**
  * Generated by API Builder - https://www.apibuilder.io
  * Service version: 1.0.1
  * apibuilder 0.15.33 app.apibuilder.io/nashtech/order/latest/play_2_6_controllers
  */
package v1

import com.nashtech.order.v1.models.json._

trait OrdersController extends play.api.mvc.BaseController {

  sealed trait GetByNumber extends Product with Serializable
  object GetByNumber {
    final case class HTTP200(body: com.nashtech.order.v1.models.Order) extends GetByNumber
    case object HTTP401 extends GetByNumber
    case object HTTP404 extends GetByNumber
    final case class Undocumented(result: play.api.mvc.Result) extends GetByNumber
  }

  def getByNumber(
      request: play.api.mvc.Request[play.api.mvc.AnyContent],
      merchantId: String,
      number: String
  ): scala.concurrent.Future[GetByNumber]
  final def getByNumber(merchantId: String, number: String): play.api.mvc.Action[play.api.mvc.AnyContent] =
    Action.async { request =>
      getByNumber(request, merchantId, number)
        .map {
          case r: GetByNumber.HTTP200      => Status(200)(play.api.libs.json.Json.toJson(r.body))
          case GetByNumber.HTTP401         => Status(401)(play.api.mvc.Results.EmptyContent())
          case GetByNumber.HTTP404         => Status(404)(play.api.mvc.Results.EmptyContent())
          case r: GetByNumber.Undocumented => r.result
        }(defaultExecutionContext)
    }

}
